[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "flower-basic"
version = "0.1.0"
description = "Federated Learning with Fog Computing Demo"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
authors = [
    {name = "Adriano Garcia", email = "adriano.garcia@example.com"},
]
maintainers = [
    {name = "Adriano Garcia", email = "adriano.garcia@example.com"},
]
keywords = ["federated-learning", "machine-learning", "fog-computing", "privacy-preserving"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Security :: Cryptography",
]
dependencies = [
    "torch>=2.0.0,<3.0.0",
    "numpy>=1.21.0,<2.0.0",
    "pandas>=1.3.0,<3.0.0",
    "matplotlib>=3.5.0,<4.0.0",
    "scikit-learn>=1.0.0,<2.0.0",
    "scipy>=1.7.0,<2.0.0",
    "flwr>=1.0.0,<2.0.0",
    "paho-mqtt>=2.0.0,<3.0.0",
    "tabulate>=0.9.0,<1.0.0",
    "seaborn>=0.11.0,<1.0.0",
    "pytest>=7.0.0,<9.0.0",
    "pytest-cov>=4.0.0,<6.0.0",
]

[project.optional-dependencies]
dev = [
    "black>=22.0.0,<26.0.0",
    "isort>=5.10.0,<7.0.0",
    "flake8>=4.0.0,<8.0.0",
    "mypy>=1.0.0,<2.0.0",
    "pre-commit>=2.17.0,<5.0.0",
    "ruff>=0.1.0,<1.0.0",
]
docs = [
    "sphinx>=5.0.0,<8.0.0",
    "sphinx-rtd-theme>=1.0.0,<3.0.0",
]
test = [
    "pytest>=7.0.0,<9.0.0",
    "pytest-cov>=4.0.0,<6.0.0",
    "pytest-mock>=3.10.0,<4.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
]

[project.urls]
Homepage = "https://github.com/adrianoggm/flower-basic"
Repository = "https://github.com/adrianoggm/flower-basic"
Issues = "https://github.com/adrianoggm/flower-basic/issues"
Documentation = "https://flower-basic.readthedocs.io/"

[project.scripts]
flower-basic = "flower_basic.__main__:main"

[tool.setuptools]
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]
exclude = ["tests*", "docs*"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | __pycache__
  | \.pytest_cache
  | \.mypy_cache
  | \.ruff_cache
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["flower_basic"]
known_third_party = ["torch", "numpy", "pandas", "matplotlib", "sklearn", "scipy", "flwr"]

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "paho.mqtt.*",
    "flwr.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
