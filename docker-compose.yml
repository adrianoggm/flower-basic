version: "3.8"

services:
  flower-server:
    build: .
    ports:
      - "8080:8080"
    volumes:
      - .:/app
      - /app/__pycache__
      - /app/.pytest_cache
      - /app/.mypy_cache
      - /app/.ruff_cache
    environment:
      - PYTHONPATH=/app/src
    command: python -m flower_basic server --host 0.0.0.0 --port 8080
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  flower-client-1:
    build: .
    depends_on:
      flower-server:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/__pycache__
      - /app/.pytest_cache
      - /app/.mypy_cache
      - /app/.ruff_cache
    environment:
      - PYTHONPATH=/app/src
    command: python -m flower_basic client --server-address flower-server:8080

  flower-client-2:
    build: .
    depends_on:
      flower-server:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/__pycache__
      - /app/.pytest_cache
      - /app/.mypy_cache
      - /app/.ruff_cache
    environment:
      - PYTHONPATH=/app/src
    command: python -m flower_basic client --server-address flower-server:8080

  flower-client-3:
    build: .
    depends_on:
      flower-server:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/__pycache__
      - /app/.pytest_cache
      - /app/.mypy_cache
      - /app/.ruff_cache
    environment:
      - PYTHONPATH=/app/src
    command: python -m flower_basic client --server-address flower-server:8080

  test-runner:
    build: .
    volumes:
      - .:/app
    environment:
      - PYTHONPATH=/app/src
    command: python -m pytest tests/ -v --cov=src --cov-report=html
    profiles:
      - test

  linter:
    build: .
    volumes:
      - .:/app
    environment:
      - PYTHONPATH=/app/src
    command: ruff check src/ tests/
    profiles:
      - lint

  formatter:
    build: .
    volumes:
      - .:/app
    environment:
      - PYTHONPATH=/app/src
    command: ruff format src/ tests/
    profiles:
      - format
